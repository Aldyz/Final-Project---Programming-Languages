/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import com.Controller;
import javax.swing.JOptionPane;
import network.ChatClient;
import com.Validator;

/**
 * this class handle the user when it tries to sign up
 * @author Aldi, Vero, Vincent
 */
public class SignUpForm extends javax.swing.JFrame {

    /**
     * Creates new form SignUpForm
     */
    public SignUpForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        lblConfirmPassword = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        bttnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        txtUsername.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        lblUsername.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        lblUsername.setText("UserName");

        lblPassword.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        lblPassword.setText("Password");

        btnConfirm.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        lblConfirmPassword.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        lblConfirmPassword.setText("Confirm Password");

        lblWelcome.setFont(new java.awt.Font("Brush Script MT", 0, 60)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(128, 49, 0));
        lblWelcome.setText("WELCOME");

        txtPassword.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        txtConfirmPassword.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        bttnCancel.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        bttnCancel.setText("Cancel");
        bttnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblWelcome)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConfirmPassword)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(lblUsername))
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword)
                            .addComponent(txtConfirmPassword))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(btnConfirm)
                .addGap(18, 18, 18)
                .addComponent(bttnCancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblWelcome)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConfirmPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(bttnCancel))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * this method is used to save the client data that has successfully signed in
     * @param evt clicked mouse input
     */
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        boolean length1 = Validator.isEmpty(txtUsername.getText());
        boolean length2 = Validator.isEmpty(txtPassword.getText());
        boolean length3 = Validator.isEmpty(txtConfirmPassword.getText());
        if(length1 || length2 || length3 ){
            JOptionPane.showMessageDialog(this, "Don't leave any boxes empty");
            return;
        }
        
        if(Validator.containsSpace(txtUsername.getText())){
            JOptionPane.showMessageDialog(this, "Don't use whitespace is any of the boxes.");
            return;
        }else if(Validator.containsSpace(txtPassword.getText())){
            JOptionPane.showMessageDialog(this, "Don't use whitespace is any of the boxes.");
            return;
        }
        
        if(Validator.isOverCharLimit(txtUsername.getText(), 20)){
            JOptionPane.showMessageDialog(this, "Name can only have 20 characters");
            return;
        }
        
        if(Validator.isOverCharLimit(txtPassword.getText(), 30)){
            JOptionPane.showMessageDialog(this, "Password can only have 30 characters");
            return;
        }
        
        if(!txtPassword.getText().equals(txtConfirmPassword.getText())){
            JOptionPane.showMessageDialog(this, "Password Not The Same");
            return;
        }
        
        if(!Validator.UserNameValidate(txtUsername.getText())){
            JOptionPane.showMessageDialog(this, "Username can only contain Alphanumerals");
            return;
        }
        
        ChatClient.getRegistration(txtUsername.getText(), txtPassword.getText());
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * this method allows the user to go back to the login form if the sign up is canceled
     * @param evt 
     */
    private void bttnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCancelActionPerformed
        // TODO add your handling code here:
        Controller.signUptoLogin();
    }//GEN-LAST:event_bttnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton bttnCancel;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
